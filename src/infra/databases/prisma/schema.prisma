generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
  binaryTargets   = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["app_access", "app_crm"]
}

model roles {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title       String?   @db.VarChar(30)
  description String?   @db.VarChar(50)
  created_at  DateTime  @default(dbgenerated("('now'::text)::date")) @db.Date
  updated_at  DateTime? @db.Date

  @@schema("app_access")
}

model users {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email      String?   @db.VarChar(50)
  password   String?   @db.VarChar(50)
  roles      Json?
  created_at DateTime  @default(dbgenerated("('now'::text)::date")) @db.Date
  updated_at DateTime? @db.Date

  @@schema("app_access")
}

model clients {
  id                String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title             String?           @db.VarChar(30)
  description       String?           @db.VarChar(50)
  id_coordinate     String            @db.Uuid
  id_type           String            @db.Uuid
  created_at        DateTime          @default(dbgenerated("('now'::text)::date")) @db.Date
  updated_at        DateTime?         @db.Date
  coordinates       coordinates       @relation(fields: [id_coordinate], references: [id], onDelete: SetNull, map: "clients_id_coordinate_fk")
  param_type_client param_type_client @relation(fields: [id_type], references: [id], onDelete: SetNull, map: "clients_id_type_fk")
  contracts         contracts[]
  etablishments     etablishments[]

  @@schema("app_crm")
}

model contracts {
  id                       String                     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title                    String?                    @db.VarChar(30)
  description              String?                    @db.VarChar(50)
  id_client                String                     @db.Uuid
  id_type                  String                     @db.Uuid
  created_at               DateTime                   @default(dbgenerated("('now'::text)::date")) @db.Date
  updated_at               DateTime?                  @db.Date
  clients                  clients                    @relation(fields: [id_client], references: [id], onDelete: SetNull, map: "contracts_id_client_fk")
  param_type_contract      param_type_contract        @relation(fields: [id_type], references: [id], onDelete: SetNull, map: "contracts_id_type_fk")
  relation_contract_module relation_contract_module[]

  @@schema("app_crm")
}

model coordinates {
  id            String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  phone         Json?           @db.Json
  email         String?         @db.VarChar(50)
  city          String?         @db.VarChar(50)
  address       Json?           @db.Json
  id_country    String          @db.Uuid
  created_at    DateTime        @default(dbgenerated("('now'::text)::date")) @db.Date
  updated_at    DateTime?       @db.Date
  clients       clients[]
  param_country param_country   @relation(fields: [id_country], references: [id], onDelete: SetNull, map: "coordinates_id_country_fk")
  etablishments etablishments[]

  @@schema("app_crm")
}

model etablishments {
  id                      String                  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title                   String?                 @db.VarChar(30)
  id_client               String                  @db.Uuid
  id_coordinate           String                  @db.Uuid
  id_type                 String                  @db.Uuid
  created_at              DateTime                @default(dbgenerated("('now'::text)::date")) @db.Date
  updated_at              DateTime?               @db.Date
  clients                 clients                 @relation(fields: [id_client], references: [id], onDelete: SetNull, map: "etablishments_id_client_fk")
  coordinates             coordinates             @relation(fields: [id_coordinate], references: [id], onDelete: SetNull, map: "etablishments_id_coordinate_fk")
  param_type_etablishment param_type_etablishment @relation(fields: [id_type], references: [id], onDelete: SetNull, map: "etablishments_id_type_fk")

  @@schema("app_crm")
}

model modules {
  id                       String                     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title                    String?                    @db.VarChar(30)
  description              String?                    @db.VarChar(50)
  id_type                  String                     @db.Uuid
  created_at               DateTime                   @default(dbgenerated("('now'::text)::date")) @db.Date
  updated_at               DateTime?                  @db.Date
  relation_contract_module relation_contract_module[]
  widgets                  widgets[]

  @@schema("app_crm")
}

model param_country {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  code        String?       @db.VarChar(30)
  abrege      String?       @db.VarChar(5)
  created_at  DateTime      @default(dbgenerated("('now'::text)::date")) @db.Date
  updated_at  DateTime?     @db.Date
  coordinates coordinates[]

  @@schema("app_crm")
}

model param_type_client {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title       String?   @db.VarChar(30)
  description String?   @db.VarChar(50)
  created_at  DateTime  @default(dbgenerated("('now'::text)::date")) @db.Date
  updated_at  DateTime? @db.Date
  clients     clients[]

  @@schema("app_crm")
}

model param_type_contract {
  id          String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title       String?     @db.VarChar(30)
  description String?     @db.VarChar(50)
  created_at  DateTime    @default(dbgenerated("('now'::text)::date")) @db.Date
  updated_at  DateTime?   @db.Date
  contracts   contracts[]

  @@schema("app_crm")
}

model param_type_etablishment {
  id            String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title         String?         @db.VarChar(30)
  description   String?         @db.VarChar(50)
  created_at    DateTime        @default(dbgenerated("('now'::text)::date")) @db.Date
  updated_at    DateTime?       @db.Date
  etablishments etablishments[]

  @@schema("app_crm")
}

model param_type_module_widget {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title       String?   @db.VarChar(30)
  description String?   @db.VarChar(50)
  created_at  DateTime  @default(dbgenerated("('now'::text)::date")) @db.Date
  updated_at  DateTime? @db.Date
  widgets     widgets[]

  @@schema("app_crm")
}

model relation_contract_module {
  id_contract String    @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  id_module   String    @db.Uuid
  created_at  DateTime  @default(dbgenerated("('now'::text)::date")) @db.Date
  updated_at  DateTime? @db.Date
  contracts   contracts @relation(fields: [id_contract], references: [id], onDelete: SetNull, map: "relation_contract_module_id_contract_fk")
  modules     modules   @relation(fields: [id_module], references: [id], onDelete: SetNull, map: "relation_contract_module_id_module_fk")

  @@unique([id_module, id_contract], map: "relation_contract_module_id_module_pk")
  @@schema("app_crm")
}

model widgets {
  id                       String                   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title                    String?                  @db.VarChar(30)
  description              String?                  @db.VarChar(50)
  id_type                  String                   @db.Uuid
  id_module                String                   @db.Uuid
  created_at               DateTime                 @default(dbgenerated("('now'::text)::date")) @db.Date
  updated_at               DateTime?                @db.Date
  modules                  modules                  @relation(fields: [id_module], references: [id], onDelete: SetNull, map: "widgets_id_module_fk")
  param_type_module_widget param_type_module_widget @relation(fields: [id_type], references: [id], onDelete: SetNull, map: "widgets_id_type_fk")

  @@schema("app_crm")
}
